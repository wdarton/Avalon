{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
<?php
/**
 * @var \{{ namespace }}\View\AppView $this
 * @var \{{ entityClass }}[]|\Cake\Collection\CollectionInterface ${{ pluralVar }}
 */
?>

<?= $this->Html->css('Avalon.datatables/dataTables.bootstrap4.min.css') ?>

{% set fields = Bake.filterFields(fields, schema, modelObject, indexColumns, ['binary', 'text']) %}

<div class="row">
    <div class="col">
        <legend>{{ pluralHumanName }}</legend>
        <hr>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="card material">
            <div class="card-body">
                <table class="table table-striped table-hover table-sm" id="{{ pluralVar }}-index">
                    <thead>
                        <tr>
{% for field in fields %}
                            <th scope="col"><?= __('{{ field }}') ?></th>
{% endfor %}
                            <th scope="col" class="actions"><?= __('Actions') ?></th>
                        </tr>
                    </thead>
                    <tbody>
                        <?php foreach (${{ pluralVar }} as ${{ singularVar }}): ?>
                        <tr>
{% for field in fields %}
{% set isKey = false %}
{% if associations.BelongsTo is defined %}
{% for alias, details in associations.BelongsTo %}
{% if field == details.foreignKey %}
{% set isKey = true %}
                            <td><?= ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '' ?></td>
{% endif %}
{% endfor %}
{% endif %}
{% if isKey is not same as(true) %}
{% set columnData = Bake.columnData(field, schema) %}
{% if columnData.type not in ['integer', 'float', 'decimal', 'biginteger', 'smallinteger', 'tinyinteger'] %}
                            <td><?= h(${{ singularVar }}->{{ field }}) ?></td>
{% else %}
                            <td><?= $this->Number->format(${{ singularVar }}->{{ field }}) ?></td>
{% endif %}
{% endif %}
{% endfor %}
{% set pk = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
                            <td class="actions">
                                <?= $this->Html->link(__('<i class="fas fa-eye"></i>'), [
                                    'action' => 'view',
                                    {{ pk|raw }}
                                ], [
                                    'class' => 'btn btn-sm btn-outline-primary',
                                    'escape' => false,
                                    'title' => 'View',

                                ]) ?>
                                <?= $this->Html->link(__('<i class="fas fa-edit"></i>'), [
                                    'action' => 'edit',
                                    {{ pk|raw }}
                                ], [
                                    'class' => 'btn btn-sm btn-outline-primary',
                                    'escape' => false,
                                    'title' => 'Edit',
                                ]) ?>
                                <?= $this->Form->postLink(__('<i class="fas fa-trash-alt"></i>'), [
                                    'action' => 'delete',
                                    {{ pk|raw }}
                                ], [
                                'onClick' => "openDeleteModal(".{{ pk|raw }}.",'".$params["controller"]."')",
                                    'class' => 'btn btn-sm btn-outline-danger',
                                    'escape' => false,
                                    'title' => 'Delete',
                                ]) ?>
                            </td>
                        </tr>
                        <?php endforeach; ?>
                    </tbody>
                </table>
                <div class="paginator">
                    <ul class="pagination justify-content-end">
                        <?= $this->Paginator->first('<<') ?>
                        <?= $this->Paginator->prev(__('Previous')) ?>
                        <?= $this->Paginator->numbers() ?>
                        <?= $this->Paginator->next(__('Next')) ?>
                        <?= $this->Paginator->last('>>') ?>
                    </ul>
                    <p class="float-right"><?= $this->Paginator->counter(__('Page {{page}} of {{pages}}, showing {{current}} record(s) out of {{count}} total')) ?></p>
                </div>
            </div>
        </div>
    </div>
</div>

<?= $this->Html->script('Avalon.datatables/jquery.dataTables.min.js') ?>
<?= $this->Html->script('Avalon.datatables/dataTables.bootstrap4.min.js') ?>

<?= $this->Element('Avalon.Datatables/datatable', [
    'tableId' => '{{ pluralVar }}-index',
    ]) ?>

